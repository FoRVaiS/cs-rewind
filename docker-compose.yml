# ========================== VARIABLES ==========================
x-api-args: &api-args
  SCOPE: "@rewind"
  PROJECT: api

x-frontend-args: &frontend-args
  SCOPE: "@rewind"
  PROJECT: frontend

services:
# ========================== PRODUCTION ==========================
  api-prod:
    build:
      dockerfile: ./docker/Dockerfile-node
      target: production
      args: *api-args
    env_file: .env
    ports:
      - ${API_PORT:-3000}:3000

  frontend-prod:
    build:
      dockerfile: ./docker/Dockerfile-web
      target: production
      args: *frontend-args
    env_file: .env
    environment:
      PROXY_API: http://api-prod:${API_PORT}
    ports:
      - ${FRONTEND_PORT:-8080}:${FRONTEND_PORT:-8080}


# ========================== DEVELOPMENT ==========================
  api-dev:
    build:
      dockerfile: ./docker/Dockerfile-node
      target: development
      args: *api-args
    restart: unless-stopped
    env_file: .env
    ports:
      - ${API_PORT:-3000}:3000
    volumes:
      - ./apps/api:/workspace/apps/api:ro
      - ./packages:/workspace/packages:ro

  frontend-dev:
    build:
      dockerfile: ./docker/Dockerfile-web
      target: development
      args: *frontend-args
    restart: unless-stopped
    env_file: .env
    environment:
      PROXY_API: http://api-dev:${API_PORT:-3000}
    ports:
      - ${FRONTEND_PORT:-8080}:${FRONTEND_PORT:-8080}
    volumes:
      - ./apps/frontend:/workspace/apps/frontend

  minio-common:
    image: minio/minio:RELEASE.2024-03-10T02-53-48Z
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - ${MINIO_PORT:-9000}:9000
      - ${MINIO_CONSOLE_PORT:-9001}:9001
    command: "server /data --console-address \":9001\""
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5

  postgres-common:
    image: postgres:16.1
    environment:
      POSTGRES_PASSWORD: dev
    ports:
     - ${POSTGRES_PORT:-5432}:5432
    volumes:
      - ./docker/postgres/initdb:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "foo"]
      interval: 1s
      timeout: 3s
      retries: 15

  redis-common:
    image: redis/redis-stack:6.2.6-v15
    environment:
      REDIS_ARGS: "--requirepass ${REDIS_PASSWORD:-redispassword}"
    ports:
      - ${REDIS_PORT:-6379}:6379
      - ${REDIS_CONSOLE_PORT:-8001}:8001
